openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      summary: Login implementation in the next task
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Login
  /user:
    get:
      operationId: UsersController_find
      summary: Gets all users
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Access token is missing or invalid
      tags:
        - User
    post:
      operationId: UsersController_create
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserDto'
      responses:
        '201':
          description: The user has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request. body does not contain required fields
        '401':
          description: Access token is missing or invalid
      tags:
        - User
  /user/{id}:
    get:
      operationId: UsersController_findOne
      summary: Get single user by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request. userId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: User not found
      tags:
        - User
    put:
      operationId: UsersController_update
      summary: Updates a user's password by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: The user has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request. userId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '403':
          description: oldPassowrd is wrong
        '404':
          description: User not found
      tags:
        - User
    delete:
      operationId: UsersController_delete
      summary: Deletes user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The user has been deleted
        '400':
          description: Bad request. userId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '403':
          description: oldPassowrd is wrong
        '404':
          description: User not found
      tags:
        - User
  /album:
    get:
      operationId: AlbumsController_find
      summary: Get albums list
      description: Gets all library albums list
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
        '401':
          description: Access token is missing or invalid
      tags:
        - Album
    post:
      operationId: AlbumsController_create
      summary: Add new album
      description: Add new album information
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAlbumDto'
      responses:
        '201':
          description: Album is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad request. body does not contain required fields
        '401':
          description: Access token is missing or invalid
      tags:
        - Album
  /album/{id}:
    get:
      operationId: AlbumsController_findOne
      summary: Get single album by id
      description: Get single album by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad request. albumId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Album not found.
      tags:
        - Album
    put:
      operationId: AlbumsController_update
      summary: Update album information
      description: Update library album information by UUID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: The album has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad request. albumId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Album not found
      tags:
        - Album
    delete:
      operationId: AlbumsController_delete
      summary: Delete album
      description: Delete album from library
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The album has been deleted
        '400':
          description: Bad request. albumId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Album not found
      tags:
        - Album
  /track:
    get:
      operationId: TracksController_find
      summary: Gets all library tracks list
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
        '401':
          description: Access token is missing or invalid
      tags:
        - Track
    post:
      operationId: TracksController_create
      summary: Add new track
      description: Add new track information
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTrackDto'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Bad request. body does not contain required fields
        '401':
          description: Access token is missing or invalid
      tags:
        - Track
  /track/{id}:
    get:
      operationId: TracksController_findOne
      summary: Gets single track by id
      description: Gets single track by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Bad request. TackId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Track not found.
      tags:
        - Track
    put:
      operationId: TracksController_update
      summary: Update track information
      description: Update library track information by UUID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: The track has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Bad request. trackId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Track not found
      tags:
        - Track
    delete:
      operationId: TracksController_delete
      summary: Delete track
      description: Delete track from library
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The track has been deleted
        '400':
          description: Bad request. trackId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Track not found
      tags:
        - Track
  /artist:
    get:
      operationId: ArtistsController_find
      summary: Gets all artists
      description: Gets all artists
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
        '401':
          description: Access token is missing or invalid
      tags:
        - Arrtist
    post:
      operationId: ArtistsController_create
      summary: Add new artist
      description: Add new artist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddArtistDto'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Bad request. body does not contain required fields
        '401':
          description: Access token is missing or invalid
      tags:
        - Arrtist
  /artist/{id}:
    get:
      operationId: ArtistsController_findOne
      summary: Get single artist
      description: Get single artist by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Bad request. artistId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Artist not found.
      tags:
        - Arrtist
    put:
      operationId: ArtistsController_update
      summary: Update artist information
      description: Update library artist information by UUID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: The artist has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Bad request. artistId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Artist not found
      tags:
        - Arrtist
    delete:
      operationId: ArtistsController_delete
      summary: Delete artist
      description: Delete artist from library
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The artist has been deleted
        '400':
          description: Bad request. artistId is invalid (not uuid)
        '401':
          description: Access token is missing or invalid
        '404':
          description: Artist not found
      tags:
        - Arrtist
  /favs:
    get:
      operationId: FavoritesController_find
      summary: Gets all favorites
      description: Gets all favorites
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
        '401':
          description: Access token is missing or invalid
      tags:
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      summary: Add track to favorites
      description: Add track to favorite
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFav'
        '400':
          description: Bad request. trackId is invalid (not uuid)
        '422':
          description: Track not found
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_deleteTrack
      summary: Delete track from favorites
      description: Delete track from favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The track has been deleted
        '400':
          description: Bad request. trackId is invalid (not uuid)
        '404':
          description: Track not found
      tags:
        - Favorites
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      summary: Add album to favorites
      description: Add album to favorite
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFav'
        '400':
          description: Bad request. albumId is invalid (not uuid)
        '422':
          description: Album not found
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_deleteAlbum
      summary: Delete album from favorites
      description: Delete album from favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The album has been deleted
        '400':
          description: Bad request. albumId is invalid (not uuid)
        '404':
          description: Album not found
      tags:
        - Favorites
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      summary: Add artist to favorites
      description: Add artist to favorite
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFav'
        '400':
          description: Bad request. artistId is invalid (not uuid)
        '422':
          description: Artist not found
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_deleteArtist
      summary: Delete artist from favorites
      description: Delete artist from favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: The artist has been deleted
        '400':
          description: Bad request. artistId is invalid (not uuid)
        '404':
          description: Artist not found
      tags:
        - Favorites
info:
  title: REST Service
  description: >-
    Let's try to create a Home Library Service! Users can create, read, update,
    delete data about Artists, Tracks and Albums, add them to Favorites in their
    own Home Library!
  version: '1.0'
  contact: {}
tags:
  - name: rs school api
    description: ''
servers:
  - url: http://localhost:4000
components:
  securitySchemes:
    basic:
      type: http
      scheme: basic
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: d9683e62-ce01-4ac4-80c7-23828cd13792
          description: unique identifier
        login:
          type: string
          example: User
        version:
          type: number
          example: '1'
        createdAt:
          type: number
          example: 1675540182719
        updatedAt:
          type: number
          example: 1675540182719
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    AddUserDto:
      type: object
      properties:
        login:
          type: string
          default: Jimmy Roquai
        password:
          type: string
          default: '12345678'
      required:
        - login
        - password
    UpdateUserDto:
      type: object
      properties:
        oldPassword:
          type: string
          default: '12345678'
        newPassword:
          type: string
          default: '87654321'
      required:
        - oldPassword
        - newPassword
    Album:
      type: object
      properties:
        id:
          type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          example: Music for the Jilted Generation
        year:
          type: number
          example: 1994
        artistId:
          type: string
          example: d2992f19-7cac-4a86-9b3d-9d143a42b66d
      required:
        - id
        - name
        - year
        - artistId
    AddAlbumDto:
      type: object
      properties:
        name:
          type: string
          default: Dynamite
        year:
          type: number
          default: 2005
        artistId:
          type: string
          default: null
      required:
        - name
        - year
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          default: null
      required:
        - name
        - year
    Track:
      type: object
      properties:
        id:
          type: string
          example: d9683e62-ce01-4ac4-80c7-23828cd13792
        name:
          type: string
          example: Breathe
        artistId:
          type: string
          example: 97c8d54a-b5e4-4a71-90b6-3786a5bbc094
        albumId:
          type: string
          example: 10c8d54a-v5e4-5a71-90b6-3786a5cec073
        duration:
          type: number
          example: 214
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    AddTrackDto:
      type: object
      properties:
        name:
          type: string
          default: Cosmic Girl
        duration:
          type: number
          default: 241
        artistId:
          default: null
          allOf:
            - $ref: '#/components/schemas/AddTrackDto'
        albumId:
          default: null
          allOf:
            - $ref: '#/components/schemas/AddTrackDto'
      required:
        - name
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          default: Cosmic Girl radio edit
        artistId:
          type: string
          default: null
        albumId:
          type: string
          default: null
        duration:
          type: number
          default: 207
      required:
        - name
        - artistId
        - duration
    Artist:
      type: object
      properties:
        id:
          type: string
          example: 97c8d54a-b5e4-4a71-90b6-3786a5bbc094
        name:
          type: string
          example: Prodigy
        grammy:
          type: boolean
          example: true
      required:
        - id
        - name
        - grammy
    AddArtistDto:
      type: object
      properties:
        name:
          type: string
          default: Jamiroquai
        grammy:
          type: boolean
          default: true
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    Favorite:
      type: object
      properties:
        artists:
          default:
            - id: 97c8d54a-b5e4-4a71-90b6-3786a5bbc094
              name: Prodigy
              grammy: true
          type: array
          items:
            type: string
        albums:
          example:
            - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              name: Innuendo
              year: 1991
              artistId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          type: array
          items:
            type: string
        tracks:
          example:
            - id: d9683e62-ce01-4ac4-80c7-23828cd13792
              name: breathe
              duration: 214
              artistId: 97c8d54a-b5e4-4a71-90b6-3786a5bbc094
              albumId: null
          type: array
          items:
            type: string
      required:
        - artists
        - albums
        - tracks
    ResponseFav:
      type: object
      properties:
        message:
          type: string
          example:
            message: Track successfully added
      required:
        - message
